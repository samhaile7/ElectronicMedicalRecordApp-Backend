name: Build

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: 'maven'

      - name: Build
        run: mvn clean package -B

      - name: Get Version from pom.xml
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | tr -d '\r' | tr -d '%')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          build-args: |
            VERSION=${{ env.VERSION }}
          tags: sammyhtb/prime-ehr:${{ env.VERSION }}
      - name: Deploy to Azure VM
        env:
          AZURE_VM_IP: ${{ secrets.AZURE_VM_IP }}
          AZURE_VM_USER: ${{ secrets.AZURE_VM_USER }}
          AZURE_VM_SSH_KEY: ${{ secrets.AZURE_VM_SSH_KEY }}
        run: |
          echo "$AZURE_VM_SSH_KEY" > azure_vm_key.pem
          chmod 600 azure_vm_key.pem
          ssh -o StrictHostKeyChecking=no -i azure_vm_key.pem $AZURE_VM_USER@$AZURE_VM_IP << EOF
            set -e
            # Create a deployment log file if it doesn't exist
            touch ~/deployment.log
            # Log deployment start
            echo "Deployment started on $(date)" >> ~/deployment.log
          
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}
            docker pull sammyhtb/prime-ehr:${{ env.VERSION }}
            echo "Stopping all running containers"
            docker stop $(docker ps -a -q) || true
            echo "Removing all containers"
            docker rm $(docker ps -a -q) || true
            docker run -d --name prime-ehr-container -p 8080:8080 sammyhtb/prime-ehr:${{ env.VERSION }}
          EOF